<!DOCTYPE html>
<html>
	<head>
		<meta charset=utf-8>
		<title>Import</title>
		<style>
			body { margin: 0; cursor: none}
			canvas { width: 100%; height: 100% }
		</style>
	</head>
	<body>
	<script src="three.js"></script>
	<script>
        var WIDTH = window.innerWidth-3;
        var HEIGHT = window.innerHeight-3;

        var lon = 0, lat = 0,
		theta = 0, phi = 0,
		isUserInteractingMouse = false,
		pointerX = 0, pointerY = 0,
		pointerLon = 0, pointerLat = 0;
		var rho = 50;
        var target = new THREE.Vector3(0, 0, 0);

		var path = "json/";
		var path2 = "C:/Users/Marina/Documenti/[SIMONE]/GitHubRepo/three.js/examples/models/";

        /*Basic Initialization*/
        var renderer = new THREE.WebGLRenderer();
        renderer.setSize(WIDTH, HEIGHT);
        renderer.setClearColor(0xcccccc);
		renderer.shadowMap.enabled = true;
		renderer.shadowMap.type = THREE.BasicShadowMap;
		document.body.appendChild(renderer.domElement);

		/*Event Listeners*/
		document.addEventListener("mousedown", onMouseDown, false);
		document.addEventListener("mousemove", onMouseMove, false);
		document.addEventListener("mouseup", onMouseUp, false);
		document.addEventListener("mousewheel", onMouseWheel, false);

        /*Scene and Fog init*/
        var scene = new THREE.Scene();

        /*Standard Camera Init*/
        var camera = new THREE.PerspectiveCamera(45, WIDTH/HEIGHT, 1, 10000);
        camera.lookAt(new THREE.Vector3(0,0,0));
        scene.add(new THREE.AmbientLight(0xeeeeee));

        /*Gets Mouse position at click*/
		function onMouseDown(event){
	   				event.preventDefault();
	   				isUserInteractingMouse = true;
	   				pointerX = event.clientX;
	 				pointerY = event.clientY;
	   				pointerLon = lon;
	 				pointerLat = lat;
		  	}

		/*Updates movement when mouse clicked and moved*/
		function onMouseMove(event){
			if (isUserInteractingMouse === true) {
				lon = (pointerX - event.clientX) * 0.5 + pointerLon;
				lat = (event.clientY - pointerY) * 0.5 + pointerLat;
				if(lon > 360){
					lon -= 360;
				}
			}
		}

		/*Recognizes that user is no longer pressing mouse button*/
		function onMouseUp(event) {
			isUserInteractingMouse = false;
		}

        /*Moves the camera farther and closer to the character*/
		function onMouseWheel(event) {
			rho -= event.wheelDeltaY * 0.01;
		}

        cameraUpdate = function(){
            lat = Math.max(-89, Math.min(89, lat));
            rho = Math.max(0, rho);
            theta = THREE.Math.degToRad(90 - lat);
            phi = THREE.Math.degToRad(lon);
            var x1 = rho * Math.sin(theta) * Math.cos(phi);
            var y1 = rho * Math.cos(theta);
            var z1 = rho * Math.sin(theta) * Math.sin(phi);

            camera.position.x = x1;
            camera.position.y = y1;
            camera.position.z = z1;
            camera.lookAt(target);
        }

        /*Rendering function*/
		animate = function(){
			requestAnimationFrame(animate);
			cameraUpdate();
			renderer.render(scene, camera);
        }



        animate();
    </script>
	</body>
</html>
